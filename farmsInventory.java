
//developer: @xilerjohn;
import javax.swing.GroupLayout.Alignment;
import javax.swing.JOptionPane;
import javax.swing.GroupLayout;
import javax.swing.LayoutStyle.ComponentPlacement;
import java.awt.Point;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;

import java.util.Scanner;
import java.io.FileNotFoundException;
import java.io.RandomAccessFile;
import javax.swing.table.DefaultTableModel;
import javax.swing.JTextField;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Label;
import java.awt.Font;
import javax.swing.JButton;
import java.awt.Dimension;
import java.awt.Color;
import java.awt.Component;


@SuppressWarnings("serial")
public class farmsInventory extends javax.swing.JFrame {
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel BaseBoardPanel;
    private java.awt.Label Title;
    private javax.swing.JButton AddButton;
    private javax.swing.JButton DelButton;
    private javax.swing.JButton EditButton;
    private javax.swing.JButton SubmitButton;
    private javax.swing.JComboBox<String> ComboBox;
    private javax.swing.JLabel LabelCredits;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable Tablelist;
    private javax.swing.JTextField txtItemcode;
    private java.awt.Label labelProduct;
    private java.awt.Label labelQTY;
    private java.awt.Label labelITEMCODE;
    private JTextField textQTY;
	protected String nameNumberString;
	protected String name;
	protected long number;
	protected String newName;
	protected long newNumber;
	protected BufferedReader br;
   
    // End of variables declaration//GEN-END:variables
    /**
     * Creates new form frameCRUD
     */
    public farmsInventory() {
    	setResizable(true);
    	setLocation(new Point(100, 100));
        initComponents();
      
    }
    
    //FILE HANDLING CONCEPT HERE
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
  
    public void initComponents() {

        BaseBoardPanel = new javax.swing.JPanel();
        labelProduct = new java.awt.Label();
        labelProduct.setFont(new Font("Tahoma", Font.BOLD, 13));
        txtItemcode = new javax.swing.JTextField();
        labelQTY = new java.awt.Label();
        labelQTY.setFont(new Font("Tahoma", Font.BOLD, 13));
        labelITEMCODE = new java.awt.Label();
        labelITEMCODE.setFont(new Font("Tahoma", Font.BOLD, 13));
        ComboBox = new javax.swing.JComboBox<>();
        AddButton = new javax.swing.JButton();
        AddButton.setFont(new Font("Tahoma", Font.BOLD, 13));
        DelButton = new javax.swing.JButton();
        DelButton.setFont(new Font("Tahoma", Font.BOLD, 13));
        EditButton = new javax.swing.JButton();
        EditButton.setFont(new Font("Tahoma", Font.BOLD, 13));
        LabelCredits = new javax.swing.JLabel();
        Title = new java.awt.Label();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jScrollPane1.addMouseListener(new MouseAdapter() {
        	@Override
        	public void mouseClicked(MouseEvent e) {
        		DefaultTableModel table = (DefaultTableModel)Tablelist.getModel();
        		String ComboBox1 = table.getValueAt(Tablelist.getSelectedRow(), 1).toString();
        		String textQTY1 = table.getValueAt(Tablelist.getSelectedRow(), 2).toString();
        		String txtItemcode1 = table.getValueAt(Tablelist.getSelectedRow(), 3).toString();
        		//set to textfield.
        		ComboBox.setSelectedItem(ComboBox1);
        		textQTY.setText(textQTY1);
        		txtItemcode.setText(txtItemcode1);
        		
        	}
        });
        Tablelist = new javax.swing.JTable();
        Label Descriptionlabel = new java.awt.Label();
        Descriptionlabel.setFont(new Font("Tahoma", Font.BOLD, 13));
        Descriptionlabel.setAlignment(Label.CENTER);


        BaseBoardPanel.setBackground(new java.awt.Color(113, 161, 220));

        labelProduct.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        labelProduct.setForeground(new java.awt.Color(242, 247, 247));
        labelProduct.setText("Products");

        txtItemcode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
            	txtItemcodeActionPerformed(evt);
            }
        });

        labelQTY.setForeground(new java.awt.Color(242, 247, 247));
        labelQTY.setText("Quantity");
        
        textQTY = new JTextField();
        textQTY.setColumns(10);

        labelITEMCODE.setForeground(new java.awt.Color(242, 247, 247));
        labelITEMCODE.setText("ItemCode");

        ComboBox.setEditable(true);
        
        ComboBox.setName(""); // NOI18N
        ComboBox.setVerifyInputWhenFocusTarget(false);
        ComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboBoxActionPerformed(evt);
            }
        });

        AddButton.setBackground(new java.awt.Color(116, 222, 219));
        AddButton.setText("Add");
        AddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent add) {
                ButtonAddActionPerformed(add);
            }
        });

        DelButton.setBackground(new java.awt.Color(116, 222, 219));
        DelButton.setText("Delete");
        DelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent del) {
                ButtonDelActionPerformed(del);
            }
        });

        EditButton.setBackground(new java.awt.Color(116, 222, 219));
        EditButton.setText("Edit");
        EditButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent edit) {
                ButtonEditActionPerformed(edit);
            }
        });

        LabelCredits.setForeground(new java.awt.Color(255, 255, 255));
        LabelCredits.setText("@xilerjohn");
        
        

        javax.swing.GroupLayout BaseBoardPanelLayout = new javax.swing.GroupLayout(BaseBoardPanel);
        BaseBoardPanelLayout.setHorizontalGroup(
        	BaseBoardPanelLayout.createParallelGroup(Alignment.LEADING)
        		.addGroup(BaseBoardPanelLayout.createSequentialGroup()
        			.addGap(48)
        			.addComponent(EditButton, GroupLayout.PREFERRED_SIZE, 74, GroupLayout.PREFERRED_SIZE)
        			.addContainerGap(106, Short.MAX_VALUE))
        		.addGroup(BaseBoardPanelLayout.createSequentialGroup()
        			.addGroup(BaseBoardPanelLayout.createParallelGroup(Alignment.TRAILING)
        				.addGroup(BaseBoardPanelLayout.createSequentialGroup()
        					.addContainerGap()
        					.addComponent(AddButton, GroupLayout.PREFERRED_SIZE, 77, GroupLayout.PREFERRED_SIZE)
        					.addGap(41)
        					.addComponent(DelButton, GroupLayout.PREFERRED_SIZE, 80, GroupLayout.PREFERRED_SIZE))
        				.addGroup(Alignment.LEADING, BaseBoardPanelLayout.createSequentialGroup()
        					.addGap(23)
        					.addGroup(BaseBoardPanelLayout.createParallelGroup(Alignment.LEADING)
        						.addComponent(LabelCredits)
        						.addGroup(BaseBoardPanelLayout.createParallelGroup(Alignment.TRAILING)
        							.addGroup(BaseBoardPanelLayout.createSequentialGroup()
        								.addComponent(labelProduct, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        								.addPreferredGap(ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
        								.addComponent(ComboBox, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        							.addGroup(BaseBoardPanelLayout.createSequentialGroup()
        								.addGroup(BaseBoardPanelLayout.createParallelGroup(Alignment.LEADING)
        									.addComponent(labelQTY, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        									.addComponent(labelITEMCODE, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        								.addPreferredGap(ComponentPlacement.RELATED, 74, Short.MAX_VALUE)
        								.addGroup(BaseBoardPanelLayout.createParallelGroup(Alignment.TRAILING, false)
        									.addComponent(txtItemcode)
        									.addComponent(textQTY, GroupLayout.DEFAULT_SIZE, 56, Short.MAX_VALUE)))))))
        			.addContainerGap(20, Short.MAX_VALUE))
        );
        BaseBoardPanelLayout.setVerticalGroup(
        	BaseBoardPanelLayout.createParallelGroup(Alignment.LEADING)
        		.addGroup(BaseBoardPanelLayout.createSequentialGroup()
        			.addGap(49)
        			.addGroup(BaseBoardPanelLayout.createParallelGroup(Alignment.LEADING)
        				.addComponent(labelProduct, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        				.addComponent(ComboBox, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        			.addGap(28)
        			.addGroup(BaseBoardPanelLayout.createParallelGroup(Alignment.LEADING)
        				.addComponent(labelQTY, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        				.addComponent(textQTY, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        			.addGap(18)
        			.addGroup(BaseBoardPanelLayout.createParallelGroup(Alignment.LEADING)
        				.addComponent(txtItemcode, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        				.addComponent(labelITEMCODE, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        			.addGroup(BaseBoardPanelLayout.createParallelGroup(Alignment.LEADING)
        				.addGroup(BaseBoardPanelLayout.createSequentialGroup()
        					.addGap(132)
        					.addComponent(EditButton)
        					.addPreferredGap(ComponentPlacement.RELATED, 240, Short.MAX_VALUE)
        					.addComponent(LabelCredits)
        					.addGap(22))
        				.addGroup(BaseBoardPanelLayout.createSequentialGroup()
        					.addGap(51)
        					.addGroup(BaseBoardPanelLayout.createParallelGroup(Alignment.BASELINE)
        						.addComponent(DelButton)
        						.addComponent(AddButton))
        					.addContainerGap())))
        );
        BaseBoardPanel.setLayout(BaseBoardPanelLayout);
     
        ComboBox.getAccessibleContext().setAccessibleName("");
        ComboBox.getAccessibleContext().setAccessibleDescription("");
        ComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "","Rice", "Corn", "SugarCane", "Potato","Peanut","Coconut","Wheat","Palm"}));
        Title.setAlignment(java.awt.Label.CENTER);
        Title.setBackground(new java.awt.Color(232, 237, 242));
        Title.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        Title.setFont(new Font("Dialog", Font.BOLD, 15)); // NOI18N
        Title.setText("Farmers Product Inventory System");

        jPanel1.setBackground(new java.awt.Color(102, 102, 102));

        Tablelist.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Tablelist.setModel(new DefaultTableModel(
        	new Object[][] {
        	},
        	new String[] {
        		"Products", "Quantity", "ITEM CODE"
        	}
        ));
        Tablelist.setCellSelectionEnabled(true);
        jScrollPane1.setViewportView(Tablelist);
        if (Tablelist.getColumnModel().getColumnCount() > 0) {
            Tablelist.getColumnModel().getColumn(0).setHeaderValue("Products");
            Tablelist.getColumnModel().getColumn(1).setHeaderValue("Quantity");
            Tablelist.getColumnModel().getColumn(2).setHeaderValue("ITEM CODE");
        }

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        Descriptionlabel.setText("Update File Here");
        SubmitButton = new javax.swing.JButton();
        SubmitButton.setFont(new Font("Tahoma", Font.BOLD, 13));
        SubmitButton.addActionListener(new ActionListener() {
        	//submit button to.!!!!!!!
        	public void actionPerformed(ActionEvent e) {
        		try {
        	    File newFile= new File("C:\\Users\\Tron-PC\\OneDrive\\Eclipse-Programs\\farmerInventory\\fileHandler\\Listahan.txt");
        		FileWriter myWriter = new FileWriter("C:\\Users\\Tron-PC\\OneDrive\\Eclipse-Programs\\farmerInventory\\fileHandler\\Listahan.txt");
        		myWriter.write("PRODUCT: "+ComboBox.getSelectedItem().toString()+"\n");
        		myWriter.write("QTY :"+textQTY.getText()+"\n");
        		myWriter.write("ItemCode :"+txtItemcode.getText());
        		myWriter.close();
        		JOptionPane.showMessageDialog(Tablelist, newFile);
        		if(!newFile.exists()) {
        			// Create a new file if not exists.
                    newFile.createNewFile();    		 
        		}
        		// Opening file in reading and write mode.       		 
                RandomAccessFile raf
                    = new RandomAccessFile(newFile, "rw");
                boolean found = false;
                // Checking whether the name
                // of contact already exists.
                // getFilePointer() give the current offset
                // value from start of the file.
       
                while (raf.getFilePointer() < raf.length()) {
     
                    // reading line from the file.
                    nameNumberString = raf.readLine();
     
                    // splitting the string to get name and
                    // number
                    String[] lineSplit
                        = nameNumberString.split("!");
     
                    // separating name and number.
                    name = lineSplit[0];
                    number = Long.parseLong(lineSplit[1]);
     
                    // if condition to find existence of record.
                    if (name == newName
                        || number == newNumber) {
                        found = true;
                        break;
                    }
                }
     
                if (found == false) {
     
                    // Enter the if block when a record
                    // is not already present in the file.
                    nameNumberString
                        = newName + "!"
                          + String.valueOf(newNumber);
     
                    // writeBytes function to write a string
                    // as a sequence of bytes.
                    raf.writeBytes(nameNumberString);
     
                    // To insert the next record in new line.
                    raf.writeBytes(System.lineSeparator());
     
                    // Print the message
                    System.out.println(" new Data added. ");
     
                    // Closing the resources.
                    raf.close();
                }
                // The contact to be updated
                // could not be found
                else {
     
                    // Closing the resources.
                    raf.close();
     
                    // Print the message
                    System.out.println(" File name"
                                       + " does not exists. ");
                }
        		}catch(IOException er) {
        			System.out.println("An error has occured."+ er);
        			er.printStackTrace();
        		}
        		 catch (NumberFormatException nef) {
        	            System.out.println(nef);
        	        }
        	}
        	}
        );
        
                SubmitButton.setBackground(new java.awt.Color(116, 222, 219));
                SubmitButton.setText("Submit");
        
        JButton btnUpdate = new JButton("UPDATE");
        btnUpdate.setFont(new Font("Tahoma", Font.BOLD, 13));
        btnUpdate.setAlignmentX(Component.RIGHT_ALIGNMENT);
        btnUpdate.setBackground(new Color(116, 222, 219));
        btnUpdate.setMinimumSize(new Dimension(33, 9));
        btnUpdate.setMaximumSize(new Dimension(33, 9));
        btnUpdate.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent up) {
        		try {
        			File readMe = new File("C:\\\\Users\\\\Tron-PC\\\\OneDrive\\\\Eclipse-Programs\\\\farmerInventory\\\\fileHandler\\\\Listahan.txt");
        		      Scanner scan = new Scanner(readMe);
						while(scan.hasNextLine()) {
							  String fileData = scan.nextLine();
							  JOptionPane.showMessageDialog(Tablelist,fileData);
							}
						scan.close();
					}
        		catch(FileNotFoundException f) {
        				f.printStackTrace();
        				System.out.println("error" + f);
        			}
        	}
        });
        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        layout.setHorizontalGroup(
        	layout.createParallelGroup(Alignment.LEADING)
        		.addGroup(layout.createSequentialGroup()
        			.addComponent(BaseBoardPanel, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        			.addGroup(layout.createParallelGroup(Alignment.LEADING)
        				.addGroup(layout.createSequentialGroup()
        					.addPreferredGap(ComponentPlacement.RELATED)
        					.addComponent(jPanel1, GroupLayout.DEFAULT_SIZE, 536, Short.MAX_VALUE))
        				.addGroup(layout.createSequentialGroup()
        					.addPreferredGap(ComponentPlacement.RELATED)
        					.addComponent(Descriptionlabel, GroupLayout.PREFERRED_SIZE, 203, GroupLayout.PREFERRED_SIZE))
        				.addGroup(layout.createSequentialGroup()
        					.addGap(54)
        					.addComponent(SubmitButton, GroupLayout.PREFERRED_SIZE, 107, GroupLayout.PREFERRED_SIZE)
        					.addGap(178)
        					.addComponent(btnUpdate, GroupLayout.PREFERRED_SIZE, 120, GroupLayout.PREFERRED_SIZE)))
        			.addContainerGap())
        		.addComponent(Title, GroupLayout.DEFAULT_SIZE, 780, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
        	layout.createParallelGroup(Alignment.TRAILING)
        		.addGroup(layout.createSequentialGroup()
        			.addComponent(Title, GroupLayout.PREFERRED_SIZE, 50, GroupLayout.PREFERRED_SIZE)
        			.addGap(1)
        			.addGroup(layout.createParallelGroup(Alignment.LEADING)
        				.addGroup(layout.createSequentialGroup()
        					.addComponent(jPanel1, GroupLayout.PREFERRED_SIZE, 327, GroupLayout.PREFERRED_SIZE)
        					.addGap(66)
        					.addComponent(Descriptionlabel, GroupLayout.PREFERRED_SIZE, 41, GroupLayout.PREFERRED_SIZE)
        					.addGap(37)
        					.addGroup(layout.createParallelGroup(Alignment.BASELINE)
        						.addComponent(SubmitButton, GroupLayout.PREFERRED_SIZE, 50, GroupLayout.PREFERRED_SIZE)
        						.addComponent(btnUpdate, GroupLayout.PREFERRED_SIZE, 49, GroupLayout.PREFERRED_SIZE))
        					.addGap(71))
        				.addComponent(BaseBoardPanel, GroupLayout.DEFAULT_SIZE, 592, Short.MAX_VALUE)))
        );
        getContentPane().setLayout(layout);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtItemcodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3ActionPerformed

    public void ComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
    	
    	
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void ButtonDelActionPerformed(java.awt.event.ActionEvent del) {//GEN-FIRST:event_jButton2ActionPerformed
      //this is delete button.
    	ComboBox.setSelectedItem("");
		textQTY.setText("");
		txtItemcode.setText("");
    }//delete the filled up data. not the data on the table.

    private void ButtonEditActionPerformed(java.awt.event.ActionEvent edit) {//GEN-FIRST:event_jButton3ActionPerformed
    	DefaultTableModel table = (DefaultTableModel)Tablelist.getModel();
    	if(Tablelist.getSelectedRowCount() == 1) {
    		String products= ComboBox.getSelectedItem().toString();
    		String qty= textQTY.getText();
    		String code =txtItemcode.getText();
    		 //set updated value on the table
    		table.setValueAt(products, Tablelist.getSelectedRow(), 0);
    		table.setValueAt(qty, Tablelist.getSelectedRow(), 1);
    		table.setValueAt(code, Tablelist.getSelectedRow(), 2);
    		//edit message
    		JOptionPane.showMessageDialog(this, "Edited Succesfully...");
    	} else {
    	    if(Tablelist.getSelectedRowCount() == -1) {
    	    	//if table is empty
        		JOptionPane.showMessageDialog(this, "Table is empty...");
    	    }else {
    	    	//if no row is selected
    	    	JOptionPane.showMessageDialog(this, "please select row for editing values...");
    	    }
    	}
    }//edit the table list of data.

    private void ButtonAddActionPerformed(java.awt.event.ActionEvent add) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
        	if(ComboBox.getSelectedItem().equals("") || textQTY.getText().equals("") || txtItemcode.getText().equals("")) {
        		JOptionPane.showMessageDialog(this, "Fill up all data!!");
        		
        	}else {
        		//lets store data in an array
        		String data[] = {ComboBox.getSelectedItem().toString(),textQTY.getText(),txtItemcode.getText()};
        		DefaultTableModel table = (DefaultTableModel)Tablelist.getModel();
        		//this will add data to my table.
        		table.addRow(data);
        		JOptionPane.showMessageDialog(this, "Added to list");	
        	}
    }catch(Exception er) {
    	System.out.println("Failed to add.");
    }             
  }//GEN-LAST:event_jButton1ActionPerformed	
}
